{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importa useNavigate en lugar de useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Usa useNavigate en lugar de useHistory\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Aquí deberías hacer la llamada POST al endpoint de login\n    const response = await fetch(\"http://localhost:8000/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      if (data.user.is_admin === 1) {\n        // Si el usuario es administrador, redirige a /form\n        navigate('/form');\n      } else {\n        // Si no es administrador, redirige a /table\n        navigate('/table');\n      }\n    } else {\n      // Manejo de errores, por ejemplo mostrar un mensaje al usuario\n      console.error('Error en el login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","user","is_admin","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importa useNavigate en lugar de useHistory\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Usa useNavigate en lugar de useHistory\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Aquí deberías hacer la llamada POST al endpoint de login\n    const response = await fetch(\"http://localhost:8000/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      if (data.user.is_admin === 1) {\n        // Si el usuario es administrador, redirige a /form\n        navigate('/form');\n      } else {\n        // Si no es administrador, redirige a /table\n        navigate('/table');\n      }\n    } else {\n      // Manejo de errores, por ejemplo mostrar un mensaje al usuario\n      console.error('Error en el login');\n    }\n  };\n\n  return (\n    <div className='container mt-5'>\n      <div className='row'>\n        <div className='col-12'>\n\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBd,KAAK;QACLE;MACF,CAAC;IACH,CAAC,CAAC;IAEF,IAAIM,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,IAAI,CAACC,QAAQ,KAAK,CAAC,EAAE;QAC5B;QACAf,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM;QACL;QACAA,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,MAAM;MACL;MACAgB,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;IACpC;EACF,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B1B,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClB1B,OAAA;QAAKyB,SAAS,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5CID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAAiC,EAAA,GAHxB9B,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}