{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport DataFormPage from \"./pages/DataFormPage\";\nimport DataTablePage from \"./pages/DataTablePage\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado de autenticación\n\n  // Función para manejar el inicio de sesión\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/login\", {\n        username,\n        password\n      });\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setIsLoggedIn(true); // Establecer el estado de inicio de sesión como verdadero\n        console.log(\"Inicio de sesión exitoso\"); // Confirmar inicio de sesión\n      } else {\n        console.error(\"Token no recibido en la respuesta\");\n      }\n    } catch (error) {\n      console.error(\"Error al iniciar sesión:\", error);\n    }\n  };\n\n  // Función para manejar el envío del formulario\n  const handleFormSubmit = formData => {\n    // Lógica de envío del formulario\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/form\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(DataFormPage, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/table\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(DataTablePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 52\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","LoginPage","DataFormPage","DataTablePage","axios","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","username","password","response","post","data","token","localStorage","setItem","console","log","error","handleFormSubmit","formData","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","to","replace","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport DataFormPage from \"./pages/DataFormPage\";\nimport DataTablePage from \"./pages/DataTablePage\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado de autenticación\n\n  // Función para manejar el inicio de sesión\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/login\", {\n        username,\n        password,\n      });\n\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setIsLoggedIn(true); // Establecer el estado de inicio de sesión como verdadero\n        console.log(\"Inicio de sesión exitoso\"); // Confirmar inicio de sesión\n      } else {\n        console.error(\"Token no recibido en la respuesta\");\n      }\n    } catch (error) {\n      console.error(\"Error al iniciar sesión:\", error);\n    }\n  };\n\n  // Función para manejar el envío del formulario\n  const handleFormSubmit = (formData) => {\n    // Lógica de envío del formulario\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<LoginPage onLogin={handleLogin} />} />\n        <Route path=\"/form\" element={isLoggedIn ? <DataFormPage onSubmit={handleFormSubmit} /> : <Navigate to=\"/\" replace />} />\n        <Route path=\"/table\" element={isLoggedIn ? <DataTablePage /> : <Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}