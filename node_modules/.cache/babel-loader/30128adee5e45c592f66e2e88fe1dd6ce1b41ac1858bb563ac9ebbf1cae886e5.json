{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Login from \"./Login\";\nimport DataFormPage from \"./DataFormPage\";\nimport DataTablePage from \"./DataTablePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para manejar el estado de inicio de sesión\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/login\", {\n        email,\n        password\n      });\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setIsLoggedIn(true); // Establecer el estado de inicio de sesión como verdadero\n        console.log(\"Inicio de sesión exitoso\");\n        return true;\n      } else {\n        console.error(\"Token no recibido en la respuesta\");\n        return false;\n      }\n    } catch (error) {\n      console.error(\"Error al iniciar sesión:\", error);\n      return false;\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false); // Establecer el estado de inicio de sesión como falso al cerrar sesión\n    console.log(\"Cierre de sesión exitoso\");\n  };\n\n  // Función para verificar si el usuario está autenticado\n  const isAuthenticated = () => {\n    return isLoggedIn || localStorage.getItem(\"token\");\n  };\n  const PrivateRoute = ({\n    element,\n    path\n  }) => {\n    return isAuthenticated() ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/form\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          element: /*#__PURE__*/_jsxDEV(DataFormPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/table\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          element: /*#__PURE__*/_jsxDEV(DataTablePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","axios","Login","DataFormPage","DataTablePage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","email","password","response","post","data","token","localStorage","setItem","console","log","error","handleLogout","removeItem","isAuthenticated","getItem","PrivateRoute","element","path","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","onLogin","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Login from \"./Login\";\nimport DataFormPage from \"./DataFormPage\";\nimport DataTablePage from \"./DataTablePage\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para manejar el estado de inicio de sesión\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/login\", {\n        email,\n        password,\n      });\n\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setIsLoggedIn(true); // Establecer el estado de inicio de sesión como verdadero\n        console.log(\"Inicio de sesión exitoso\");\n        return true;\n      } else {\n        console.error(\"Token no recibido en la respuesta\");\n        return false;\n      }\n    } catch (error) {\n      console.error(\"Error al iniciar sesión:\", error);\n      return false;\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false); // Establecer el estado de inicio de sesión como falso al cerrar sesión\n    console.log(\"Cierre de sesión exitoso\");\n  };\n\n  // Función para verificar si el usuario está autenticado\n  const isAuthenticated = () => {\n    return isLoggedIn || localStorage.getItem(\"token\");\n  };\n\n  const PrivateRoute = ({ element, path }) => {\n    return isAuthenticated() ? element : <Navigate to=\"/\" replace />;\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/form\" element={<PrivateRoute element={<DataFormPage />} />} />\n        <Route path=\"/table\" element={<PrivateRoute element={<DataTablePage />} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}